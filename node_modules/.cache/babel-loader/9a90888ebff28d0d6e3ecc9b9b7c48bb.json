{"ast":null,"code":"import _objectSpread from \"/Users/donaldnyingifa/man_city/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/donaldnyingifa/man_city/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/donaldnyingifa/man_city/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/donaldnyingifa/man_city/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/donaldnyingifa/man_city/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/donaldnyingifa/man_city/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/donaldnyingifa/man_city/src/Components/home/promotion/Enroll.js\";\nimport React, { Component } from 'react';\nimport Fade from 'react-reveal/Fade';\nimport FormField from '../../ui/formFields';\nimport { validate } from '../../ui/misc';\n\nvar Enroll =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Enroll, _Component);\n\n  function Enroll() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Enroll);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Enroll)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      formError: false,\n      formSuccess: '',\n      formdata: {\n        email: {\n          element: 'input',\n          value: '',\n          config: {\n            name: 'email_input',\n            type: 'email',\n            placeholder: 'Enter your email'\n          },\n          validation: {\n            required: true,\n            email: true\n          },\n          valid: false,\n          validationMessage: ''\n        }\n      }\n    };\n    return _this;\n  }\n\n  _createClass(Enroll, [{\n    key: \"updateForm\",\n    value: function updateForm(element) {\n      var newFormdata = _objectSpread({}, this.state.formdata);\n\n      var newElement = _objectSpread({}, newFormdata[element.id]);\n\n      newElement.value = element.event.target.value;\n      var validData = validate(newElement);\n      console.log(validData);\n      newElement.valid = validData[0];\n      newElement.validationMessage = validData[1];\n      newFormdata[element.id] = newElement;\n      this.setState({\n        formError: false,\n        formdata: newFormdata\n      });\n    }\n  }, {\n    key: \"resetFormSuccess\",\n    value: function resetFormSuccess() {\n      var newFormdata = _objectSpread({}, this.state.formdata);\n\n      for (var key in newFormdata) {\n        newFormdata[key].value = '';\n        newFormdata[key].valid = false;\n        newFormdata[key].validationMessage = '';\n      }\n\n      this.setState({\n        formError: false,\n        formdata: newFormdata,\n        formSuccess: 'Congratulations'\n      });\n      this.successMessage();\n    }\n  }, {\n    key: \"successMessage\",\n    value: function successMessage() {\n      var _this2 = this;\n\n      setTimeout(function () {\n        _this2.setState({\n          formSuccess: ''\n        });\n      });\n    }\n  }, {\n    key: \"submitForm\",\n    value: function submitForm(event) {\n      event.preventDefault();\n      var dataToSubmit = {};\n      var formIsValid = true;\n\n      for (var key in this.state.formdata) {\n        dataToSubmit[key] = this.state.formdata[key].value;\n        formIsValid = this.state.formdata[key].valid && formIsValid;\n      }\n\n      if (formIsValid) {\n        console.log(dataToSubmit);\n        this.resetFormSuccess();\n      } else {\n        this.setState({\n          formError: true\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(Fade, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"enroll_wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: function onSubmit(event) {\n          return _this3.submitForm(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"enroll_title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Enter your email\"), React.createElement(\"div\", {\n        className: \"enroll_input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(FormField, {\n        id: 'email',\n        formdata: this.state.formdata.email,\n        change: function change(element) {\n          return _this3.updateForm(element);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), this.state.formError ? React.createElement(\"div\", {\n        className: \"error_label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Something is wrong, try again.\") : null, React.createElement(\"div\", {\n        className: \"success_label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, this.state.formSuccess), React.createElement(\"button\", {\n        onClick: function onClick(event) {\n          return _this3.submitForm(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Enroll\")))));\n    }\n  }]);\n\n  return Enroll;\n}(Component);\n\nexport default Enroll;","map":{"version":3,"sources":["/Users/donaldnyingifa/man_city/src/Components/home/promotion/Enroll.js"],"names":["React","Component","Fade","FormField","validate","Enroll","state","formError","formSuccess","formdata","email","element","value","config","name","type","placeholder","validation","required","valid","validationMessage","newFormdata","newElement","id","event","target","validData","console","log","setState","key","successMessage","setTimeout","preventDefault","dataToSubmit","formIsValid","resetFormSuccess","submitForm","updateForm"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Fade from 'react-reveal/Fade'\nimport FormField from '../../ui/formFields'\nimport { validate } from '../../ui/misc'\n\nclass Enroll extends Component {\n\n  state = {\n      formError:false,\n      formSuccess:'',\n      formdata:{\n          email:{\n              element:'input',\n              value:'',\n              config:{\n                  name:'email_input',\n                  type: 'email',\n                  placeholder: 'Enter your email'\n              },\n              validation:{\n                  required: true,\n                  email: true\n              },\n              valid: false,\n              validationMessage:''\n          },\n\n      }\n  }\n\n  updateForm(element){\n    const newFormdata = {...this.state.formdata}\n    const newElement = { ...newFormdata[element.id]}\n\n    newElement.value = element.event.target.value;\n\n    let validData = validate(newElement)\n    console.log(validData)\n    newElement.valid = validData[0];\n    newElement.validationMessage = validData[1];\n\n    newFormdata[element.id] = newElement;\n\n    this.setState({\n        formError: false,\n        formdata: newFormdata\n    })\n  }\n\n  resetFormSuccess(){\n     const newFormdata = {...this.state.formdata}\n\n     for(let key in newFormdata){\n       newFormdata[key].value = '';\n       newFormdata[key].valid = false;\n       newFormdata[key].validationMessage = '';\n     }\n\n     this.setState({\n        formError:false,\n        formdata: newFormdata,\n        formSuccess: 'Congratulations'\n     });\n     this.successMessage();\n  }\n\n  successMessage(){\n      setTimeout(()=>{\n          this.setState({\n              formSuccess:''\n          })\n      })\n  }\n\n  submitForm(event){\n      event.preventDefault();\n\n      let dataToSubmit = {};\n      let formIsValid = true;\n\n      for(let key in this.state.formdata){\n          dataToSubmit[key] = this.state.formdata[key].value;\n          formIsValid = this.state.formdata[key].valid && formIsValid;\n      }\n\n      if(formIsValid){\n        console.log(dataToSubmit)\n        this.resetFormSuccess()\n      } else {\n        this.setState({\n            formError: true\n        })\n      }\n  }\n\n  render () {\n    return (\n          <Fade>\n              <div className=\"enroll_wrapper\">\n                  <form onSubmit={(event)=> this.submitForm(event)}>\n                      <div className=\"enroll_title\">\n                          Enter your email\n                      </div>\n                      <div className=\"enroll_input\">\n                          <FormField\n                              id={'email'}\n                              formdata={this.state.formdata.email}\n                              change={(element)=> this.updateForm(element)}\n                            />\n\n                          { this.state.formError ?\n                            <div className=\"error_label\">Something is wrong, try again.</div>\n                            :null}\n                            <div className=\"success_label\">{this.state.formSuccess}</div>\n                          <button onClick={(event)=> this.submitForm(event)}>Enroll</button>\n                      </div>\n                  </form>\n              </div>\n          </Fade>\n    );\n  }\n}\n\nexport default Enroll;\n"]},"metadata":{},"sourceType":"module"}